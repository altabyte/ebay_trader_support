#!/usr/bin/env ruby

require_relative './helper'
include ExecutableHelper

require_relative '../lib/ebay_trader_support/get_categories'
include EbayTraderSupport

class Categories

  def initialize
    options.show_root_categories = false
    parse_args options

    # Sending an unrecognized base category value ('all') to GetCategories
    # will cause it to return all root categories for the site.
    category_number = options.show_root_categories ? 'all' : ARGV.first

    # GetCategories is not specific to a particular eBay user,
    # so any valid Authentication Token can be used.
    auth_token = generic_auth_token

    categories = GetCategories.new(category_number, auth_token: auth_token, ebay_site_id: options.ebay_site_id)
    if categories.has_errors?
      categories.errors.each do |error|
        console error.short_message, :red
        console error.long_message,  :red
      end
    else
      console categories.to_s
    end
  end


  #---------------------------------------------------------------------------
  private

  def parse_args(options)
    ARGV << '-h' if ARGV.empty?
    option_parser = OptionParser.new do |opts|
      opts.banner = "Usage: #{File.basename(__FILE__)} [options] category_ID"

      opts.separator ''

      opts.on('-a', '--all', 'Show all root categories.') do
        options.show_root_categories = true
      end

      opts.on('-z', '--ebay-site-id integer', 'ID number of the eBay site hosting the categories.') do |ebay_site_id|
        options.ebay_site_id = ebay_site_id
      end

      opts.on('-h', '-?', '--help', 'Display this screen.') do
        raise opts.to_s
      end
    end
    option_parser.parse!
  end

end

#-----------------------------------------------------------------------------

begin
  Categories.new
rescue Exception => e
  console e.message, :red
  exit -1
end

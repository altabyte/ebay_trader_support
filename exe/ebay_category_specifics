#!/usr/bin/env ruby

require_relative './helper'
include ExecutableHelper

require_relative '../lib/ebay_trading_pack/get_category_specifics'
include EbayTradingPack

class CategorySpecifics

  def initialize
    parse_args options

    category_number = ARGV.first
    raise 'Please provide a category number' if category_number.blank?

    # GetCategorySpecifics is not specific to a particular eBay user,
    # so any valid Authentication Token can be used.
    auth_token = generic_auth_token

    specifics = GetCategorySpecifics.new(category_number, auth_token: auth_token, ebay_site_id: options.ebay_site_id)
    if specifics.has_errors?
      specifics.errors.each do |error|
        console error[:short_message], :red
        console error[:long_message],  :red
      end
    else
      result = specifics.to_s
      if result.length == 0
        console 'There are no specifics for this category', :red
      else
        console result
      end
    end
  end

  #---------------------------------------------------------------------------
  private

  def parse_args(options)
    ARGV << '-h' if ARGV.empty?
    option_parser = OptionParser.new do |opts|
      opts.banner = "Usage: #{File.basename(__FILE__)} [options] category_ID"

      opts.separator ''

      opts.on('-z', '--ebay-site-id integer', 'ID number of the eBay site hosting the categories.') do |ebay_site_id|
        options.ebay_site_id = ebay_site_id
      end

      opts.on('-h', '-?', '--help', 'Display this screen.') do
        raise opts.to_s
      end
    end
    option_parser.parse!
  end

end

#-----------------------------------------------------------------------------

begin
  CategorySpecifics.new
rescue Exception => e
  console e.message, :red
  exit -1
end
